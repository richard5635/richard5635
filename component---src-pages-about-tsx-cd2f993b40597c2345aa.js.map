{"version":3,"sources":["webpack:///./src/pages/about.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/store.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/HeaderMenu/HeaderMenu.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SidebarMenu/SidebarMenu.tsx","webpack:///./src/components/Layout.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","withLayout","vertical","as","name","Content","href","target","m","module","exports","require","default","toggleSidebar","type","store","createStore","state","action","Object","assign","isSidebarVisible","devToolsEnhancer","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","a","React","createContext","PropTypes","object","string","isRequired","func","connect","_ref","items","pathname","Link","inverted","dispatch","react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_5__","size","pointing","secondary","Item","className","icon","onClick","semantic_ui_react__WEBPACK_IMPORTED_MODULE_6__","map","item","active","exact","path","startsWith","to","key","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","createElement","InternalPageRenderer","json","propTypes","shape","visible","isActive","activeItem","find","react","Sidebar","Menu","animation","width","Icon","menuItems","Layout","props","isHome","es","Pushable","Segment","components_SidebarMenu_SidebarMenu","Pusher","style","minHeight","HeaderMenu","paddingBottom","children","position","bottom","WrappedComponent","_React$Component","WithLayout","apply","this","arguments","inheritsLoose_default","prototype","render","Layout_Layout"],"mappings":"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","file":"component---src-pages-about-tsx-cd2f993b40597c2345aa.js","sourcesContent":["import * as React from \"react\";\nimport { Header, Container, Segment, Icon } from \"semantic-ui-react\";\nimport {withLayout} from \"../components/Layout\";\n\nconst AboutPage = () => {\n  return (\n    <Container>\n      <Segment vertical>\n        <Header as=\"h2\">\n          <Icon name=\"info circle\" />\n          <Header.Content>\n            About\n          </Header.Content>\n        </Header>\n      </Segment>\n      <Segment vertical>\n        <p>\n          This starter was created by @fabien0102.\n        </p>\n        <p>\n          For any question, I'm on <a href=\"https://discord.gg/2bz8EzW\" target=\"blank\">discord #reactiflux/gatsby</a>\n        </p>\n        <p>\n          For any issues, any PR are welcoming\n          <a href=\"https://github.com/fabien0102/gatsby-starter/issues\" target=\"blank\"> on this repository</a>\n        </p>\n      </Segment>\n    </Container>\n  );\n};\n\nexport default withLayout(AboutPage);\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { createStore } from \"redux\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\nimport { get } from \"lodash\";\n\nexport interface StoreState {\n  isSidebarVisible: boolean;\n}\n\n// Actions\nexport const TOGGLE_SIDEBAR = \"TOGGLE_SIDEBAR\";\nexport type TOGGLE_SIDEBAR = typeof TOGGLE_SIDEBAR;\nexport interface ToggleSidebar {\n  type: TOGGLE_SIDEBAR;\n}\nexport const toggleSidebar = () => ({ type: TOGGLE_SIDEBAR });\n\n// Reducer\nexport const reducer = (state: StoreState, action: ToggleSidebar): StoreState => {\n  switch (action.type) {\n    case TOGGLE_SIDEBAR:\n      return Object.assign({}, state, { isSidebarVisible: !state.isSidebarVisible });\n    default:\n      return state;\n  }\n};\n\n// Store\nexport const initialState: StoreState = { isSidebarVisible: false };\nexport const store = createStore<StoreState, any, any, any>(\n  reducer,\n  initialState,\n  devToolsEnhancer({}),\n);\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { toggleSidebar } from \"../../store\";\nimport { Container, Label, Menu, Icon } from \"semantic-ui-react\";\nimport { MenuProps } from \"../Menu\";\n\ninterface HeaderMenuProps extends MenuProps {\n  dispatch?: Dispatch<any>;\n  inverted?: boolean;\n}\n\nexport const HeaderMenu = ({ items, pathname, Link, inverted, dispatch }: HeaderMenuProps) =>\n  <Container>\n    <Menu size=\"large\" pointing secondary inverted={inverted}>\n      <Menu.Item as=\"a\" className=\"mobile only\" icon=\"sidebar\" onClick={() => dispatch && dispatch(toggleSidebar())} />\n      <Menu.Item className=\"mobile hidden\"><Icon name=\"spy\" size=\"big\" /></Menu.Item>\n      {items.map((item) => {\n        const active = (item.exact) ? pathname === item.path : pathname.startsWith(item.path);\n        return <Menu.Item\n          as={Link}\n          className=\"mobile hidden\"\n          name={item.name}\n          to={item.path}\n          key={item.path}\n          active={active}\n        />;\n      })}\n    </Menu>\n  </Container>;\n\nexport default connect()(HeaderMenu);\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { GatsbyLinkProps } from \"gatsby-link\";\nimport { StoreState } from \"../../store\";\nimport { MenuProps, MenuItem } from \"../Menu\";\nimport { Menu, Icon, Sidebar } from \"semantic-ui-react\";\nimport { SemanticICONS } from \"semantic-ui-react\";\n\ninterface SidebarMenuProps extends MenuProps {\n  visible?: boolean;\n  dispatch?: Dispatch<any>;\n  Link: React.ComponentClass<GatsbyLinkProps<any>>;\n}\n\nexport const SidebarMenu = ({ items, pathname, Link, visible }: SidebarMenuProps) => {\n  const isActive = (item: MenuItem) => (item.exact) ? pathname === item.path : pathname.startsWith(item.path);\n  const activeItem = items.find((item: MenuItem) => isActive(item)) || {} as MenuItem;\n  return (\n    <Sidebar as={Menu} animation=\"slide along\" width=\"thin\"\n      visible={visible} icon=\"labeled\" vertical inverted={activeItem.inverted}>\n      {items.map((item) => {\n        const active = isActive(item);\n        return (\n          <Menu.Item as={Link} to={item.path} active={active} key={item.path}>\n            <Icon name={item.icon as SemanticICONS} />\n            {item.name}\n          </Menu.Item>\n        );\n      })}\n    </Sidebar>\n  );\n};\n\nconst mapStateToProps = (state: StoreState) => ({\n  visible: state.isSidebarVisible,\n});\n\nexport default connect<any, void, SidebarMenuProps>(mapStateToProps)(SidebarMenu);\n","import { Link } from \"gatsby\";\nimport * as React from \"react\";\nimport HeaderMenu from \"./HeaderMenu/HeaderMenu\";\nimport SidebarMenu from \"./SidebarMenu/SidebarMenu\";\nimport { Segment, Icon, Container, Sidebar } from \"semantic-ui-react\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"../store\";\n\n// This is where CSS is loaded\nimport \"../css/styles.css\";\nimport \"../css/responsive.css\";\nimport \"../css/semantic.min.css\";\n\nimport \"prismjs/themes/prism-okaidia.css\";\n\n\n\n\nexport const menuItems = [\n  { name: \"Home\", path: \"/\", exact: true, icon: \"home\", inverted: true },\n  { name: \"About\", path: \"/about/\", exact: true, icon: \"info circle\" },\n  { name: \"Blog\", path: \"/blog/\", exact: false, icon: \"newspaper\" },\n];\n\nexport interface LayoutProps {\n  location: {\n    pathname: string;\n  };\n  children: any;\n}\n\nconst Layout = (props: LayoutProps) => {\n  const { pathname } = props.location;\n  const isHome = pathname === \"/\";\n\n  return (\n    <Provider store={store}>\n      <Sidebar.Pushable as={Segment}>\n\n        <SidebarMenu Link={Link} pathname={pathname} items={menuItems} visible={false} />\n\n        <Sidebar.Pusher style={{ minHeight: \"100vh\" }}>\n          {/* Header */}\n          {isHome ? null : <HeaderMenu\n            Link={Link}\n            pathname={pathname}\n            items={menuItems}\n          />}\n\n          {/* Render children pages */}\n          <div style={{ paddingBottom: 60 }}>\n            {props.children}\n          </div>\n\n          {/* Footer */}\n          <Segment vertical style={{ position: \"absolute\", bottom: 0, width: \"100%\" }}>\n            {/* <Container textAlign=\"center\">\n              <p>Powered with <Icon name=\"heart\" /> by Gatsby 2.0</p>\n            </Container> */}\n          </Segment>\n        </Sidebar.Pusher>\n      </Sidebar.Pushable>\n    </Provider>\n  );\n};\n\nexport default Layout;\n\nexport const withLayout = <P extends object>(WrappedComponent: React.ComponentType<P>) =>\n  class WithLayout extends React.Component<P & LayoutProps> {\n    render() {\n      return (\n        <Layout location={this.props.location}>\n          <WrappedComponent {...this.props} />\n        </Layout>\n      );\n    }\n  };\n"],"sourceRoot":""}